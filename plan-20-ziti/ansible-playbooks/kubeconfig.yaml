- name: Create a Kubeconfig Context for the K8s API Ziti Service
  hosts: localhost
  connection: local
  tasks:
    - name: Get Kubeconfig Filename from Env
      ansible.builtin.set_fact:
        kubeconfig_filename: "{{ lookup('ansible.builtin.env', 'K8S_AUTH_KUBECONFIG') }}"
    - name: Read Kubeconfig
      ansible.builtin.set_fact:
        kubeconfig: "{{ lookup('ansible.builtin.file', kubeconfig_filename) | from_yaml }}"
    - name: Find Current Context Name
      ansible.builtin.set_fact:
        current_context_name: "{{ kubeconfig['current-context'] }}"
    - name: Get Current Context
      ansible.builtin.set_fact:
        current_context: "{{ kubeconfig | json_query(query) | first }}"
      vars:
        query: "contexts[?name==`{{ current_context_name }}`]"
    - name: Get Current Cluster
      ansible.builtin.set_fact:
        current_cluster: "{{ kubeconfig | json_query(query) | first }}"
      vars:
        query: "clusters[?name==`{{ current_context.context.cluster }}`]"
    - name: Get Current User
      ansible.builtin.set_fact:
        current_user: "{{ current_context.context.user }}"
    - name: Define Ziti Context Name
      ansible.builtin.set_fact:
        ziti_context_name: "ziti-{{ current_context_name }}"
    - name: Get Cluster CA Data
      ansible.builtin.set_fact:
        cluster_ca_cert: "{{ current_cluster.cluster['certificate-authority-data'] }}"
    - name: Define Ziti Cluster and Context in Kubeconfig
      ansible.builtin.shell:
        cmd: |
          kubectl --kubeconfig {{ kubeconfig_filename | quote }} \
            config set-cluster {{ ziti_context_name | quote }} --server=https://kubernetes.default.svc;
          kubectl --kubeconfig "{{ kubeconfig_filename }}" \
            config set "clusters.{{ ziti_context_name }}.certificate-authority-data" {{ cluster_ca_cert | quote }};
          kubectl --kubeconfig "{{ kubeconfig_filename }}" \
            config set-context {{ ziti_context_name | quote }} --cluster={{ ziti_context_name | quote }} --user={{ current_user | quote }}
